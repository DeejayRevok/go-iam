name: IAM Release Workflow

on:
  push:
    branches:
      - main

jobs:
  iam-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: |
          VERSION=`cat VERSION`
          echo "Version: $VERSION"
          echo "::set-output name=version::$VERSION"
      - name: Build the docker image
        run: docker build -t djrevok/go-iam:${{ steps.get_version.outputs.version }} --build-arg DEVELOPMENT="false" .
      - name: Login to docker hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish docker image
        uses: actions-hub/docker@master
        with:
            args: push djrevok/go-iam:${{ steps.get_version.outputs.version }}
      - name: Setup helm
        uses: azure/setup-helm@v1
      - name: Build helm chart
        run: make build-chart
      - name: Clone helm repo
        run: |
          git clone https://DeejayRevok:${{ secrets.HELM_REPO_ACCESS_TOKEN }}@github.com/DeejayRevok/helm-repo.git
      - name: Copy chart to repo
        run: cp ./search-engine-${{ steps.get_version.outputs.version }}.tgz ./helm-repo
      - name: Index new chart
        run: helm repo index --url https://deejayrevok.github.io/helm-repo ./helm-repo
      - name: Push new chart
        run: |
          git config --local user.name "Github Action"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "Github Actions Automatically Built IAM Release ${{ steps.get_version.outputs.version }}"
          git push --force --quiet https://DeejayRevok:${{ secrets.HELM_REPO_ACCESS_TOKEN }}@github.com/DeejayRevok/helm-repo.git main:main
        working-directory: ./helm-repo
      - uses: avakar/tag-and-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
