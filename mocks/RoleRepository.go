// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	role "go-uaa/src/domain/role"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// RoleRepository is an autogenerated mock type for the RoleRepository type
type RoleRepository struct {
	mock.Mock
}

// FindByIDs provides a mock function with given fields: roleIDs
func (_m *RoleRepository) FindByIDs(roleIDs []uuid.UUID) ([]role.Role, error) {
	ret := _m.Called(roleIDs)

	var r0 []role.Role
	if rf, ok := ret.Get(0).(func([]uuid.UUID) []role.Role); ok {
		r0 = rf(roleIDs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]role.Role)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]uuid.UUID) error); ok {
		r1 = rf(roleIDs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0
func (_m *RoleRepository) Save(_a0 role.Role) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(role.Role) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRoleRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRoleRepository creates a new instance of RoleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRoleRepository(t mockConstructorTestingTNewRoleRepository) *RoleRepository {
	mock := &RoleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
