// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// HashComparator is an autogenerated mock type for the HashComparator type
type HashComparator struct {
	mock.Mock
}

// Compare provides a mock function with given fields: source, sourceHash
func (_m *HashComparator) Compare(source string, sourceHash string) error {
	ret := _m.Called(source, sourceHash)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(source, sourceHash)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewHashComparator interface {
	mock.TestingT
	Cleanup(func())
}

// NewHashComparator creates a new instance of HashComparator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHashComparator(t mockConstructorTestingTNewHashComparator) *HashComparator {
	mock := &HashComparator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
