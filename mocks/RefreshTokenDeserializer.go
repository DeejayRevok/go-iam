// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	refreshToken "go-iam/src/domain/auth/refreshToken"

	mock "github.com/stretchr/testify/mock"
)

// RefreshTokenDeserializer is an autogenerated mock type for the RefreshTokenDeserializer type
type RefreshTokenDeserializer struct {
	mock.Mock
}

// Deserialize provides a mock function with given fields: serializedToken
func (_m *RefreshTokenDeserializer) Deserialize(serializedToken string) (*refreshToken.RefreshToken, error) {
	ret := _m.Called(serializedToken)

	var r0 *refreshToken.RefreshToken
	if rf, ok := ret.Get(0).(func(string) *refreshToken.RefreshToken); ok {
		r0 = rf(serializedToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*refreshToken.RefreshToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(serializedToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRefreshTokenDeserializer interface {
	mock.TestingT
	Cleanup(func())
}

// NewRefreshTokenDeserializer creates a new instance of RefreshTokenDeserializer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRefreshTokenDeserializer(t mockConstructorTestingTNewRefreshTokenDeserializer) *RefreshTokenDeserializer {
	mock := &RefreshTokenDeserializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
