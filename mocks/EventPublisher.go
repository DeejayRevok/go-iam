// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	"go-iam/src/domain/events"

	mock "github.com/stretchr/testify/mock"
)

// EventPublisher is an autogenerated mock type for the EventPublisher type
type EventPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: event
func (_m *EventPublisher) Publish(event events.Event) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(events.Event) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewEventPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewEventPublisher creates a new instance of EventPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEventPublisher(t mockConstructorTestingTNewEventPublisher) *EventPublisher {
	mock := &EventPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
